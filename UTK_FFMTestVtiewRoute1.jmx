<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${domain}</stringProp>
        <stringProp name="HTTPSampler.port">443</stringProp>
        <stringProp name="HTTPSampler.protocol">${porotocol}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="domain" elementType="Argument">
            <stringProp name="Argument.name">domain</stringProp>
            <stringProp name="Argument.value">ffm-test.ukrtelecom.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="site" elementType="Argument">
            <stringProp name="Argument.name">site</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="porotocol" elementType="Argument">
            <stringProp name="Argument.name">porotocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="IdCurrentUser" elementType="Argument">
              <stringProp name="Argument.name">IdCurrentUser</stringProp>
              <stringProp name="Argument.value">7f3b869f-34f3-4f20-ab4d-7480a5fdf647</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="IdCurrentUserContact" elementType="Argument">
              <stringProp name="Argument.name">IdCurrentUserContact</stringProp>
              <stringProp name="Argument.value">410006e1-ca4e-4502-a9ec-e54d922d2c00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="IdOwnerContact" elementType="Argument">
              <stringProp name="Argument.name">IdOwnerContact</stringProp>
              <stringProp name="Argument.value">b2c5b5de-7162-40e3-911e-3fbec342a3b8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller - Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="633 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="634 /ServiceModel/AuthService.svc/Login" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;UserName&quot;:&quot;Supervisor&quot;,&quot;UserPassword&quot;:&quot;Supervisor&quot;,&quot;TimeZoneOffset&quot;:-180}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ServiceModel/AuthService.svc/Login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">true</stringProp>
              <stringProp name="RegexExtractor.refname">CSRF_TOKEN</stringProp>
              <stringProp name="RegexExtractor.regex">Set-Cookie: BPMCSRF=(.+?);</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - open Contact section" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1082 /0/rest/RightsService/GetCanExecuteOperations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operations&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/RightsService/GetCanExecuteOperations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1083 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SocialAccount&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;UserFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;User&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdCurrentUser}&quot;}}},&quot;TypeFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Type&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;efe5d7a2-5f38-e111-851e-00155d04c01d&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:34}},&quot;Login&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Login&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1085 /0/rest/RightsService/GetSchemaOperationRightLevel" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;schemaName&quot;:&quot;Contact&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/RightsService/GetSchemaOperationRightLevel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1084 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;ContactSyncSettings&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;0c05eee3-1171-4714-a658-2eda8a54f818&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[MailboxSyncSettings:Id:MailboxSyncSettings].SysAdminUnit&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdCurrentUser}&quot;}}},&quot;681be568-cdc6-4aab-9270-f403c5cf1176&quot;:{&quot;items&quot;:{&quot;19bf1011-6b64-48c6-9ab4-301d0eb155c9&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ImportContacts&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}},&quot;185482bd-bf48-4bf6-8b5b-10ead885e5bf&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ExportContacts&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:1,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Count&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:2,&quot;functionArgument&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;},&quot;aggregationType&quot;:1}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1088 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SysModuleReport&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;3b3137e7-a584-4452-9752-5025096cf119&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysModule.SysModuleEntity.[SysSchema:UId:SysEntitySchemaUId].Name&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;Contact&quot;}}},&quot;5b6b2353-189b-4e79-a69e-0c301ee4fc07&quot;:{&quot;filterType&quot;:4,&quot;comparisonType&quot;:4,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;},&quot;rightExpressions&quot;:[{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;490AD08A-8C80-E011-AFBC-00155D04320C&quot;}},{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;DCFD7211-240C-4E8D-9154-FF2BCE2FD20E&quot;}}]},&quot;ab339bc0-8c82-45ee-a649-57c38c7f396f&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ShowInCard&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Caption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}},&quot;NonLocalizedCaption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:2,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}},&quot;PrintFormType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Type.Name&quot;}},&quot;SysReportSchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysReportSchemaUId&quot;}},&quot;ConvertInPDF&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ConvertInPDF&quot;}},&quot;TypeColumnValue&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TypeColumnValue&quot;}}}},&quot;isDistinct&quot;:true,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1087 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SysModuleReport&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;5f50ec5c-a591-4e32-9db7-04827ee1d5cf&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysModule.SysModuleEntity.[SysSchema:UId:SysEntitySchemaUId].Name&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;Contact&quot;}}},&quot;f3e8d82d-5e25-4f2d-9145-2f7804d8d796&quot;:{&quot;filterType&quot;:4,&quot;comparisonType&quot;:4,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;},&quot;rightExpressions&quot;:[{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;490AD08A-8C80-E011-AFBC-00155D04320C&quot;}},{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;DCFD7211-240C-4E8D-9154-FF2BCE2FD20E&quot;}}]},&quot;f91bca20-f51e-46e9-bd70-7f1d72b9d292&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ShowInSection&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Caption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}},&quot;NonLocalizedCaption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:2,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}},&quot;PrintFormType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Type.Name&quot;}},&quot;SysReportSchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysReportSchemaUId&quot;}},&quot;ConvertInPDF&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ConvertInPDF&quot;}},&quot;TypeColumnValue&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TypeColumnValue&quot;}}}},&quot;isDistinct&quot;:true,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1086 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;AcademyURL&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:null,&quot;columns&quot;:{&quot;items&quot;:{&quot;Description&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Description&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1093 /0/rest/RightsService/GetCanExecuteOperations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operations&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/RightsService/GetCanExecuteOperations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1092 /0/rest/RightsService/GetCanExecuteOperations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operations&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/RightsService/GetCanExecuteOperations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1091 /0/rest/TsiFFMFiltersService/GetRoleFilterList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sysAdminUnitId&quot;:&quot;${IdCurrentUser}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/TsiFFMFiltersService/GetRoleFilterList</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1090 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;TsiReportInSection&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;dfa2e7a4-435f-4f15-8241-f753e512f74b&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiSysModule.SysModuleEntity.[SysSchema:UId:SysEntitySchemaUId].Name&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;Contact&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;TsiReport&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiReport&quot;}},&quot;Caption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiReport.TsiName&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1089 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SysModuleAnalyticsReport&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;bbadea1d-4c22-44d9-a422-4a825d0e03c8&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModuleSchemaName&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;Contact&quot;}}},&quot;d7a0d4fc-7bda-4e9e-ab6a-82d52c265ee1&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[VwSysSchemaInWorkspace:UId:SysOptionsPageSchemaUId].SysWorkspace.Id&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;5bb5433f-020f-443f-8c49-6cbc9aab8ae8&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Caption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}},&quot;SysSchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysSchemaUId&quot;}},&quot;OptionSchemaName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[VwSysSchemaInWorkspace:UId:SysOptionsPageSchemaUId].Name&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1096 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;VwSysProcess&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;availableProcesses&quot;:{&quot;items&quot;:{&quot;f0c9a0fe-0893-4221-8e80-f3087ef5f4fa&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysWorkspace&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;5bb5433f-020f-443f-8c49-6cbc9aab8ae8&quot;}}},&quot;257ccd3b-082e-4fce-b879-9d9d1b7d6300&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsMaxVersion&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}},&quot;ec4e9a43-3325-4000-acf4-fab5f0db76ab&quot;:{&quot;filterType&quot;:5,&quot;comparisonType&quot;:15,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[ProcessInModules:SysSchemaUId:UId].Id&quot;},&quot;subFilters&quot;:{&quot;items&quot;:{},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;e81e8e9f-f2a2-4fa4-8396-83139bdcbcee&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[ProcessInModules:SysSchemaUId:UId].SysModule&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;065063c9-8180-e011-afbc-00155d04320c&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Caption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1095 /0/DataService/json/SyncReply/BatchQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;items&quot;:[{&quot;__type&quot;:&quot;Terrasoft.Nui.ServiceModel.DataContract.SelectQuery&quot;,&quot;rootSchemaName&quot;:&quot;SocialAccount&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;typeFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Type.Name&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;Google&quot;}}},&quot;currentUserFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;User&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdCurrentUser}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;SenderEmailAddress&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Login&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false},{&quot;__type&quot;:&quot;Terrasoft.Nui.ServiceModel.DataContract.SelectQuery&quot;,&quot;rootSchemaName&quot;:&quot;ContactSyncSettings&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;userFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;MailboxSyncSettings.SysAdminUnit&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdCurrentUser}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;MailboxSyncSettings&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;MailboxSyncSettings&quot;}},&quot;MailServerType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;MailboxSyncSettings.MailServer.Type&quot;}},&quot;SenderEmailAddress&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;MailboxSyncSettings.SenderEmailAddress&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/BatchQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1094 /0/DataService/json/SyncReply/QuerySysSettings" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sysSettingsNameCollection&quot;:[&quot;ShowDemoLinks&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QuerySysSettings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1097 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;AcademyURL&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:null,&quot;columns&quot;:{&quot;items&quot;:{&quot;Description&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Description&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1098 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;Contact&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:null,&quot;columns&quot;:{&quot;items&quot;:{&quot;IdCOUNT&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:2,&quot;functionArgument&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;},&quot;aggregationType&quot;:1}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1099 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;AcademyURL&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:null,&quot;columns&quot;:{&quot;items&quot;:{&quot;Description&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Description&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1100 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;ContactSectionV2GridDataViewFilters.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1101 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;AcademyURL&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:null,&quot;columns&quot;:{&quot;items&quot;:{&quot;Description&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Description&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1102 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;FolderFavorite&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;cfc29adc-770b-4422-bbf2-82d155f14101&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysAdminUnit&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdCurrentUser}&quot;}}},&quot;84ca3388-7aa9-4ac4-bd0a-9d5c58559d3c&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;FolderEntitySchemaUId&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;8b5c01a2-59e9-40dc-855b-6e3bebddc6ee&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:34}},&quot;FolderId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;FolderId&quot;}},&quot;FolderName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:0,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[ContactFolder:Id:FolderId].Name&quot;}},&quot;FolderType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[ContactFolder:Id:FolderId].FolderType&quot;}},&quot;SearchData&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[ContactFolder:Id:FolderId].SearchData&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1104 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;Contact&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:null,&quot;columns&quot;:{&quot;items&quot;:{&quot;IdCOUNT&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:2,&quot;functionArgument&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;},&quot;aggregationType&quot;:1}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1103 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;Contact&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;9d3121ae-e042-463a-b5e8-68329f3160b8&quot;:{&quot;items&quot;:{},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Name&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Name&quot;}},&quot;Photo&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Photo&quot;}},&quot;Account&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Account&quot;}},&quot;TsiContactType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiContactType&quot;}},&quot;TsiLogin&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiLogin&quot;}},&quot;[TsiFFMVwAllScheduleAdjustment:TsiContact].TsiAbsenceType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:3,&quot;functionType&quot;:2,&quot;aggregationType&quot;:1,&quot;columnPath&quot;:&quot;[TsiFFMVwAllScheduleAdjustment:TsiContact].TsiAbsenceType&quot;,&quot;subFilters&quot;:{&quot;items&quot;:{},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6,&quot;rootSchemaName&quot;:&quot;TsiFFMVwAllScheduleAdjustment&quot;}}},&quot;EntryPointsCount&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:3,&quot;aggregationType&quot;:1,&quot;columnPath&quot;:&quot;[EntryPoint:EntityId].Id&quot;,&quot;subFilters&quot;:{&quot;items&quot;:{&quot;9bb21c57-917e-47b3-b520-4dc1ab1b41f8&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsActive&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:30,&quot;rowsOffset&quot;:0,&quot;isPageable&quot;:true,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;conditionalValues&quot;:null,&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller - Open Contact" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1030 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SysAdminUnit&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;61458ef9-4901-4349-95df-31fd4fce8dbb&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Contact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Active&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Active&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1031 /0/rest/RightsService/GetSchemaOperationRightLevel (open C)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;schemaName&quot;:&quot;Contact&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/RightsService/GetSchemaOperationRightLevel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1032 /0/DataService/json/SyncReply/QueryModuleDescriptors" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;Activity&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryModuleDescriptors</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1033 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;Contact&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;primaryColumnFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:34},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:0,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Name&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Name&quot;}},&quot;Photo&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Photo&quot;}},&quot;Owner&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Owner&quot;}},&quot;CreatedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedOn&quot;}},&quot;CreatedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedBy&quot;}},&quot;ModifiedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedOn&quot;}},&quot;ModifiedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedBy&quot;}},&quot;ProcessListeners&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessListeners&quot;}},&quot;Dear&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Dear&quot;}},&quot;SalutationType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SalutationType&quot;}},&quot;Gender&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Gender&quot;}},&quot;Account&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Account&quot;}},&quot;DecisionRole&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DecisionRole&quot;}},&quot;Type&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Type&quot;}},&quot;Job&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Job&quot;}},&quot;JobTitle&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;JobTitle&quot;}},&quot;Department&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Department&quot;}},&quot;BirthDate&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;BirthDate&quot;}},&quot;Phone&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Phone&quot;}},&quot;MobilePhone&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;MobilePhone&quot;}},&quot;HomePhone&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;HomePhone&quot;}},&quot;Skype&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Skype&quot;}},&quot;Email&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Email&quot;}},&quot;AddressType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;AddressType&quot;}},&quot;Address&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Address&quot;}},&quot;City&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;City&quot;}},&quot;Region&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Region&quot;}},&quot;Zip&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Zip&quot;}},&quot;Country&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Country&quot;}},&quot;DoNotUseEmail&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DoNotUseEmail&quot;}},&quot;DoNotUseCall&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DoNotUseCall&quot;}},&quot;DoNotUseFax&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DoNotUseFax&quot;}},&quot;DoNotUseSms&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DoNotUseSms&quot;}},&quot;DoNotUseMail&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DoNotUseMail&quot;}},&quot;Notes&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Notes&quot;}},&quot;Facebook&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Facebook&quot;}},&quot;LinkedIn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;LinkedIn&quot;}},&quot;Twitter&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Twitter&quot;}},&quot;FacebookId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;FacebookId&quot;}},&quot;LinkedInId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;LinkedInId&quot;}},&quot;TwitterId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TwitterId&quot;}},&quot;ContactPhoto&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ContactPhoto&quot;}},&quot;TwitterAFDA&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TwitterAFDA&quot;}},&quot;FacebookAFDA&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;FacebookAFDA&quot;}},&quot;LinkedInAFDA&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;LinkedInAFDA&quot;}},&quot;GPSN&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;GPSN&quot;}},&quot;GPSE&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;GPSE&quot;}},&quot;Surname&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Surname&quot;}},&quot;GivenName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;GivenName&quot;}},&quot;MiddleName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;MiddleName&quot;}},&quot;Confirmed&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Confirmed&quot;}},&quot;Language&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Language&quot;}},&quot;Completeness&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Completeness&quot;}},&quot;TsiRnPers&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiRnPers&quot;}},&quot;TsiLogin&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiLogin&quot;}},&quot;TsiState&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiState&quot;}},&quot;TsiOtherPhone&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiOtherPhone&quot;}},&quot;TsiLastDateSync&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiLastDateSync&quot;}},&quot;TsiContactInteraction&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiContactInteraction&quot;}},&quot;TsiRnAgent&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiRnAgent&quot;}},&quot;TsiRnManager&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiRnManager&quot;}},&quot;TsiContactId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiContactId&quot;}},&quot;TsiSysId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiSysId&quot;}},&quot;TsiFax&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiFax&quot;}},&quot;TsiJob&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiJob&quot;}},&quot;TsiContactType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiContactType&quot;}},&quot;TsiIsActive&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiIsActive&quot;}},&quot;TsiUpdateDepartment&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiUpdateDepartment&quot;}},&quot;IsNonActualEmail&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsNonActualEmail&quot;}},&quot;IsUserActive&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[SysAdminUnit:Contact:Id].Active&quot;}},&quot;Account.Type&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Account.Type&quot;}},&quot;City.Country&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;City.Country&quot;}},&quot;EntryPointsCount&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:3,&quot;aggregationType&quot;:1,&quot;columnPath&quot;:&quot;[EntryPoint:EntityId].Id&quot;,&quot;subFilters&quot;:{&quot;items&quot;:{&quot;997c4e6f-19c1-4302-b96c-ddc8f811a94f&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsActive&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1034 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SysModuleReport&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;d84adfc3-2ecf-4885-914d-cbf6e8cf0565&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysModule.SysModuleEntity.[SysSchema:UId:SysEntitySchemaUId].Name&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;Contact&quot;}}},&quot;6ce5d13c-2f5b-4277-98bc-1f75514af73b&quot;:{&quot;filterType&quot;:4,&quot;comparisonType&quot;:4,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;},&quot;rightExpressions&quot;:[{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;490AD08A-8C80-E011-AFBC-00155D04320C&quot;}},{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;DCFD7211-240C-4E8D-9154-FF2BCE2FD20E&quot;}}]},&quot;51eb821f-676c-4f36-b09d-f74c9421b54f&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ShowInCard&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Caption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}},&quot;NonLocalizedCaption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:2,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}},&quot;PrintFormType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Type.Name&quot;}},&quot;SysReportSchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysReportSchemaUId&quot;}},&quot;ConvertInPDF&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ConvertInPDF&quot;}},&quot;TypeColumnValue&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TypeColumnValue&quot;}}}},&quot;isDistinct&quot;:true,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1035 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SysUserInRole&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;SysUser&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysUser&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdCurrentUser}&quot;}}},&quot;SysRole&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysRole&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;a2edfd9f-54ea-426b-8d42-67ad96c452c3&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;SysRole&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysRole&quot;}},&quot;SysUser&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysUser&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1036 /0/rest/RightsService/GetCanExecuteOperation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;CanEditSubscriberContacts&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/RightsService/GetCanExecuteOperation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1038 /0/rest/RightsService/GetCanExecuteOperations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operations&quot;:[&quot;CanEditContactPhoto&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/RightsService/GetCanExecuteOperations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1037 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SysAdminUnit&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;ContactFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Contact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Name&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Name&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1039 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;ContactInTag&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;undefined&quot;:{&quot;items&quot;:{&quot;d4a2d103-16b0-45bf-90c5-0691b91c0a4e&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Entity&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}},&quot;d22e636d-6b2e-48c5-80d8-b6eea07a2611&quot;:{&quot;items&quot;:{&quot;bb59f729-89cf-4a2a-8ffa-94d86f8749dc&quot;:{&quot;items&quot;:{&quot;CurrentUser&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Tag.CreatedBy&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdCurrentUserContact}&quot;}}},&quot;PrivateType&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Tag.Type&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;8d7f6d6c-4ca5-4b43-bdd9-a5e01a582260&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;4c1dcd4b-3331-4503-a600-74d2882f24ea&quot;:{&quot;items&quot;:{&quot;OtherTypes&quot;:{&quot;filterType&quot;:4,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Tag.Type&quot;},&quot;rightExpressions&quot;:[{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;5d79e393-f8e0-4830-a76b-f3c7bce529ed&quot;}},{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;d6fb4de6-0809-41fe-a84f-6d245cbc5f32&quot;}}]}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:1,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Tag&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Tag&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1041 /0/rest/SearchDuplicatesService/GetContactPerformSearchOnSave" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/SearchDuplicatesService/GetContactPerformSearchOnSave</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1042 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;AccountProfileSchema.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1043 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;ContactPageV2ContactAnniversaryDetailV2.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1046 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;ContactPageV2TsiContactLifecycleDetail.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1045 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;ContactPageV2ContactAddressDetailV2.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1044 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;ContactPageV2ContactRelationshipDetailV2.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1049 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;ContactPageV2ContactCommunicationDetail.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1048 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;ContactPageV2ConfItemInContactDetail.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1047 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;ContactPageV2TsiFfmContactAbsenceDetail.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1040 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SysModule&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:null,&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Caption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}},&quot;Image32&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Image32&quot;}},&quot;CreatedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedOn&quot;}},&quot;CreatedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedBy&quot;}},&quot;ModifiedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedOn&quot;}},&quot;ModifiedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedBy&quot;}},&quot;ProcessListeners&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessListeners&quot;}},&quot;SysModuleEntity&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysModuleEntity&quot;}},&quot;Image16&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Image16&quot;}},&quot;Image20&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Image20&quot;}},&quot;FolderMode&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;FolderMode&quot;}},&quot;GlobalSearchAvailable&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;GlobalSearchAvailable&quot;}},&quot;HasAnalytics&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;HasAnalytics&quot;}},&quot;HasActions&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;HasActions&quot;}},&quot;HasRecent&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;HasRecent&quot;}},&quot;Code&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Code&quot;}},&quot;HelpContextId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;HelpContextId&quot;}},&quot;ModuleHeader&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModuleHeader&quot;}},&quot;Attribute&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Attribute&quot;}},&quot;SysPageSchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysPageSchemaUId&quot;}},&quot;CardSchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CardSchemaUId&quot;}},&quot;SectionModuleSchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SectionModuleSchemaUId&quot;}},&quot;SectionSchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SectionSchemaUId&quot;}},&quot;CardModuleUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CardModuleUId&quot;}},&quot;TypeColumnValue&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TypeColumnValue&quot;}},&quot;Logo&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Logo&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1050 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;Account&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;primaryColumnFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:34},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:0,&quot;value&quot;:&quot;e308b781-3c5b-4ecb-89ef-5c1ed4da488e&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Name&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Name&quot;}},&quot;AccountLogo&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;AccountLogo&quot;}},&quot;Owner&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Owner&quot;}},&quot;CreatedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedOn&quot;}},&quot;CreatedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedBy&quot;}},&quot;ModifiedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedOn&quot;}},&quot;ModifiedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedBy&quot;}},&quot;ProcessListeners&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessListeners&quot;}},&quot;Ownership&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Ownership&quot;}},&quot;PrimaryContact&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;PrimaryContact&quot;}},&quot;Parent&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Parent&quot;}},&quot;Industry&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Industry&quot;}},&quot;Code&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Code&quot;}},&quot;Type&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Type&quot;}},&quot;Phone&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Phone&quot;}},&quot;AdditionalPhone&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;AdditionalPhone&quot;}},&quot;Fax&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Fax&quot;}},&quot;Web&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Web&quot;}},&quot;AddressType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;AddressType&quot;}},&quot;Address&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Address&quot;}},&quot;City&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;City&quot;}},&quot;Region&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Region&quot;}},&quot;Zip&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Zip&quot;}},&quot;Country&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Country&quot;}},&quot;AccountCategory&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;AccountCategory&quot;}},&quot;EmployeesNumber&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;EmployeesNumber&quot;}},&quot;AnnualRevenue&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;AnnualRevenue&quot;}},&quot;Notes&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Notes&quot;}},&quot;Logo&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Logo&quot;}},&quot;AlternativeName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;AlternativeName&quot;}},&quot;GPSN&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;GPSN&quot;}},&quot;GPSE&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;GPSE&quot;}},&quot;Completeness&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Completeness&quot;}},&quot;PriceList&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;PriceList&quot;}},&quot;TsiStatus&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiStatus&quot;}},&quot;TsiClientType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiClientType&quot;}},&quot;TsiClientId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiClientId&quot;}},&quot;TsiOkpo&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiOkpo&quot;}},&quot;TsiTaxCode&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiTaxCode&quot;}},&quot;TsiDateBegin&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiDateBegin&quot;}},&quot;TsiDateEnd&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiDateEnd&quot;}},&quot;TsiState&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiState&quot;}},&quot;TsiSysId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiSysId&quot;}},&quot;TsiEmail&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiEmail&quot;}},&quot;TsiDateLastSync&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiDateLastSync&quot;}},&quot;TsiPdvCode&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiPdvCode&quot;}},&quot;TsiEpCode&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiEpCode&quot;}},&quot;TsiShortName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiShortName&quot;}},&quot;TsiIsSpec&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiIsSpec&quot;}},&quot;TsiPersonalAccountNumber&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiPersonalAccountNumber&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1051 /0/rest/EnrichContactService/GetCloudStateForContact" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;contactId&quot;:&quot;${IdOwnerContact}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/EnrichContactService/GetCloudStateForContact</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1054 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;ContactInTag&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;undefined&quot;:{&quot;items&quot;:{&quot;a6a3f952-816d-4c6a-890c-470e8794da30&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Entity&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}},&quot;44017d0e-595c-4332-b2dd-2a0f6c066671&quot;:{&quot;items&quot;:{&quot;2268f4a6-8ae2-4b2c-b742-99f0c92e33ec&quot;:{&quot;items&quot;:{&quot;CurrentUser&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Tag.CreatedBy&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdCurrentUserContact}&quot;}}},&quot;PrivateType&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Tag.Type&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;8d7f6d6c-4ca5-4b43-bdd9-a5e01a582260&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;e7a78297-9f26-4c36-bf1a-dbc56f7f6350&quot;:{&quot;items&quot;:{&quot;OtherTypes&quot;:{&quot;filterType&quot;:4,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Tag.Type&quot;},&quot;rightExpressions&quot;:[{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;5d79e393-f8e0-4830-a76b-f3c7bce529ed&quot;}},{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;d6fb4de6-0809-41fe-a84f-6d245cbc5f32&quot;}}]}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:1,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Tag&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Tag&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1053 /0/rest/SocialSubscriptionService/GetIsUserSubscribed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;entityId&quot;:&quot;${IdOwnerContact}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/SocialSubscriptionService/GetIsUserSubscribed</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1056 /0/rest/TimezoneService/GetContactCurrentTime" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;contactId&quot;:&quot;${IdOwnerContact}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/TimezoneService/GetContactCurrentTime</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1055 /0/rest/ProcessEngineService/GetProcessEntryPointsData" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;entitySchemaUId&quot;:&quot;16be3651-8fe2-4159-8dd0-a803d4683dd3&quot;,&quot;entityId&quot;:&quot;${IdOwnerContact}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/ProcessEngineService/GetProcessEntryPointsData</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1057 /0/rest/CompletenessService/GetRecordCompleteness" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;recordId&quot;:&quot;${IdOwnerContact}&quot;,&quot;schemaName&quot;:&quot;Contact&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/CompletenessService/GetRecordCompleteness</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1058 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;VwSysProcess&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;availableProcesses&quot;:{&quot;items&quot;:{&quot;fade18e1-65a7-4625-9069-5d33ef8bbd6e&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysWorkspace&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;5bb5433f-020f-443f-8c49-6cbc9aab8ae8&quot;}}},&quot;61cce15e-235a-415f-a626-20c60b7a8ebe&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsMaxVersion&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}},&quot;52e68388-cb05-49e4-9c68-e4204a23845a&quot;:{&quot;filterType&quot;:5,&quot;comparisonType&quot;:15,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[ProcessInModules:SysSchemaUId:UId].Id&quot;},&quot;subFilters&quot;:{&quot;items&quot;:{},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;87028f86-bd21-42a6-8fc7-572e6d31b371&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[ProcessInModules:SysSchemaUId:UId].SysModule&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;065063c9-8180-e011-afbc-00155d04320c&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Caption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1052 /0/rest/SearchDuplicatesService/GetContactPerformSearchOnSave" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/SearchDuplicatesService/GetContactPerformSearchOnSave</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1059 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SysModuleEntity&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:null,&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;CreatedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedOn&quot;}},&quot;CreatedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedBy&quot;}},&quot;ModifiedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedOn&quot;}},&quot;ModifiedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedBy&quot;}},&quot;ProcessListeners&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessListeners&quot;}},&quot;TypeColumnUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TypeColumnUId&quot;}},&quot;SysEntitySchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysEntitySchemaUId&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1060 /0/rest/RightsService/GetCanExecuteOperations" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operations&quot;:[&quot;CanEditContactAbsence&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/RightsService/GetCanExecuteOperations</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1061 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;AnniversaryType&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:null,&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:34}},&quot;Name&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:35}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1062 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;TsiContactLifecycle&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;0b98457c-619e-4242-bd38-cdff8113b6d4&quot;:{&quot;items&quot;:{&quot;masterRecordFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiContact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Account&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Account&quot;}},&quot;TsiStateDurationInDays&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiStateDurationInDays&quot;}},&quot;TsiStateDurationInHours&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiStateDurationInHours&quot;}},&quot;TsiStateDurationInMinutes&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiStateDurationInMinutes&quot;}},&quot;EntryPointsCount&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:3,&quot;aggregationType&quot;:1,&quot;columnPath&quot;:&quot;[EntryPoint:EntityId].Id&quot;,&quot;subFilters&quot;:{&quot;items&quot;:{&quot;2ae1cfba-c471-4972-9a26-c4cfb77dc1c9&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsActive&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:10,&quot;rowsOffset&quot;:0,&quot;isPageable&quot;:true,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;conditionalValues&quot;:null,&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1063 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;VwContactRelationship&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;39fd2ed5-8c06-4b7c-bb52-b534ecd731c3&quot;:{&quot;items&quot;:{&quot;masterRecordFilter&quot;:{&quot;items&quot;:{&quot;ContactFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Contact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:1,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;RelatedObjectName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;RelatedObjectName&quot;}},&quot;RelationType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;RelationType&quot;}},&quot;EntryPointsCount&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:3,&quot;aggregationType&quot;:1,&quot;columnPath&quot;:&quot;[EntryPoint:EntityId].Id&quot;,&quot;subFilters&quot;:{&quot;items&quot;:{&quot;973138aa-93e8-41f1-9b19-b8ce52f66584&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsActive&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:10,&quot;rowsOffset&quot;:0,&quot;isPageable&quot;:true,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;conditionalValues&quot;:null,&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1064 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;VwSysDcmLib&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;2da946d3-e1b5-4a22-b8a4-f0b56084ce91&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysWorkspace&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;5bb5433f-020f-443f-8c49-6cbc9aab8ae8&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Name&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Name&quot;}},&quot;Caption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Caption&quot;}},&quot;UId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;UId&quot;}},&quot;PackageUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;PackageUId&quot;}},&quot;Parent.UId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Parent.UId&quot;}},&quot;IsLocked&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsLocked&quot;}},&quot;ExtendParent&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ExtendParent&quot;}},&quot;SysWorkspace&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysWorkspace&quot;}},&quot;StageColumnUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;StageColumnUId&quot;}},&quot;EntitySchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;EntitySchemaUId&quot;}},&quot;IsActive&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsActive&quot;}},&quot;Filters&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Filters&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1065 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;AddressType&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;bb947802-7aaa-462d-9ab9-83dec508269f&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ForContact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:1}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:34}},&quot;Name&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:35}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1066 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;ContactAnniversary&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;519af44d-fda7-4b9f-8a82-bfac4a9c2fcf&quot;:{&quot;items&quot;:{&quot;masterRecordFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Contact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Description&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Description&quot;}},&quot;Date&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Date&quot;}},&quot;AnniversaryType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:2,&quot;orderPosition&quot;:1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;AnniversaryType&quot;}},&quot;EntryPointsCount&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:3,&quot;aggregationType&quot;:1,&quot;columnPath&quot;:&quot;[EntryPoint:EntityId].Id&quot;,&quot;subFilters&quot;:{&quot;items&quot;:{&quot;2bf31327-ae44-41f3-b1f6-e5770923cc89&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsActive&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:10,&quot;rowsOffset&quot;:0,&quot;isPageable&quot;:true,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;conditionalValues&quot;:null,&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1067 /0/DataService/json/SyncReply/QuerySysSettings" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sysSettingsNameCollection&quot;:&quot;SchemaNamePrefix&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QuerySysSettings</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1068 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;ConfItemUser&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;5ffd9fb3-9157-47b5-bbf1-b09671392225&quot;:{&quot;items&quot;:{&quot;masterRecordFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Contact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;ConfItem&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ConfItem&quot;}},&quot;ConfItem.InventoryNumber&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ConfItem.InventoryNumber&quot;}},&quot;ConfItem.Type&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ConfItem.Type&quot;}},&quot;ConfItem.Status&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ConfItem.Status&quot;}},&quot;EntryPointsCount&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:3,&quot;aggregationType&quot;:1,&quot;columnPath&quot;:&quot;[EntryPoint:EntityId].Id&quot;,&quot;subFilters&quot;:{&quot;items&quot;:{&quot;dba9d58e-892e-4e59-8cb3-7f52db649303&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsActive&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:10,&quot;rowsOffset&quot;:0,&quot;isPageable&quot;:true,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;conditionalValues&quot;:null,&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1069 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;ContactAddress&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;67adde0e-6284-4857-9e87-0641a31acec9&quot;:{&quot;items&quot;:{&quot;masterRecordFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Contact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Country&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Country&quot;}},&quot;Region&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Region&quot;}},&quot;City&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;City&quot;}},&quot;Address&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Address&quot;}},&quot;Zip&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Zip&quot;}},&quot;AddressType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;AddressType&quot;}},&quot;EntryPointsCount&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:3,&quot;aggregationType&quot;:1,&quot;columnPath&quot;:&quot;[EntryPoint:EntityId].Id&quot;,&quot;subFilters&quot;:{&quot;items&quot;:{&quot;48306034-9f76-4180-a575-08d5b9ebcada&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsActive&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:10,&quot;rowsOffset&quot;:0,&quot;isPageable&quot;:true,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;conditionalValues&quot;:null,&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1070 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;undefined.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1071 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;SysDcmSettings&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:null,&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;CreatedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedOn&quot;}},&quot;CreatedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedBy&quot;}},&quot;ModifiedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedOn&quot;}},&quot;ModifiedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedBy&quot;}},&quot;ProcessListeners&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessListeners&quot;}},&quot;SysModuleEntity&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysModuleEntity&quot;}},&quot;StageColumnUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;StageColumnUId&quot;}},&quot;Filters&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Filters&quot;}},&quot;DefaultSchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DefaultSchemaUId&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1072 /0/DataService/json/SyncReply/QueryModuleDescriptors" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&quot;Activity&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryModuleDescriptors</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1073 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;CommunicationType&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;d3a4ee0b-5c5a-45f6-8208-677f180ecee5&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;UseforContacts&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}},&quot;ac26edee-ea0a-40ae-8a17-fda24f5abc5b&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:4,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[ComTypebyCommunication:CommunicationType:Id].Communication&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;a09511b4-13f0-e011-a86b-00155d04c01d&quot;}}},&quot;6f811456-b7d3-45e4-bc24-eeca2fd035c7&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:4,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;ea0f3b0a-bacf-e011-92c3-00155d04c01d&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:34}},&quot;Name&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:35}},&quot;CommunicationId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[ComTypebyCommunication:CommunicationType:Id].Communication&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1074 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;EntityConnection&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;46bb1ef3-6cce-4d73-8649-f41816730372&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SysEntitySchemaUId&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;c449d832-a4cc-4b01-b9d5-8a12c42a9f89&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;ColumnUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ColumnUId&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1075 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;ContactCommunication&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;f78447ca-4798-4c46-921b-7947a36f3ea0&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;[CommunicationType:Id:CommunicationType].UseforContacts&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}},&quot;bcc82faf-0028-4dc6-a9e4-a4204ff4091c&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Contact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Number&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Number&quot;}},&quot;CreatedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:1,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedOn&quot;}},&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;CommunicationType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CommunicationType&quot;}},&quot;Position&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Position&quot;}},&quot;SocialMediaId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SocialMediaId&quot;}},&quot;SearchNumber&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;SearchNumber&quot;}},&quot;Contact&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Contact&quot;}},&quot;IsCreatedBySynchronization&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsCreatedBySynchronization&quot;}},&quot;NonActual&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;NonActual&quot;}},&quot;NonActualReason&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;NonActualReason&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1077 /0/DataService/json/SyncReply/SelectQuery" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;TsiFfmContactAbsence&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;83006d0b-6d5f-4c97-b576-c192b79680a2&quot;:{&quot;items&quot;:{&quot;masterRecordFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiContact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;TsiAbsenceType&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiAbsenceType&quot;}},&quot;TsiStartDate&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiStartDate&quot;}},&quot;TsiEndDate&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiEndDate&quot;}},&quot;EntryPointsCount&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:3,&quot;aggregationType&quot;:1,&quot;columnPath&quot;:&quot;[EntryPoint:EntityId].Id&quot;,&quot;subFilters&quot;:{&quot;items&quot;:{&quot;99c7719c-9796-4130-8a2c-1e6332197090&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;IsActive&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:true}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}}},&quot;CreatedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedOn&quot;}},&quot;CreatedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedBy&quot;}},&quot;ModifiedOn&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedOn&quot;}},&quot;ModifiedBy&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ModifiedBy&quot;}},&quot;ProcessListeners&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessListeners&quot;}},&quot;TsiContact&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;TsiContact&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:10,&quot;rowsOffset&quot;:0,&quot;isPageable&quot;:true,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;conditionalValues&quot;:null,&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1078 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;SectionActionsDashboard.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1079 /0/DataService/json/SyncReply/QueryProfile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;key&quot;:&quot;ActionsDashboard_Contact.profile&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/QueryProfile</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1080 /0/DataService/json/SyncReply/BatchQuery (cont opened)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;items&quot;:[{&quot;__type&quot;:&quot;Terrasoft.Nui.ServiceModel.DataContract.SelectQuery&quot;,&quot;rootSchemaName&quot;:&quot;Activity&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;MasterColumnFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Contact&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}},&quot;3b7eeeb9-b7fc-4813-98b7-a08e47344dfe&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Status.Finish&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:false}}},&quot;5406b769-8ee0-447a-b383-09fdeeaa2dde&quot;:{&quot;items&quot;:{&quot;52d33b07-9d7b-4650-a744-0ebf3ab8b924&quot;:{&quot;filterType&quot;:2,&quot;comparisonType&quot;:1,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;MessageType&quot;},&quot;isNull&quot;:true},&quot;6a733b70-b8d9-490d-a1d2-2bad7a293805&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;MessageType&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;7f9d1f86-f36b-1410-068c-20cf30b39373&quot;}}}},&quot;logicalOperation&quot;:1,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;Caption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Title&quot;}},&quot;Type&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Type&quot;}},&quot;ProcessElementId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessElementId&quot;}},&quot;Date&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;StartDate&quot;}},&quot;Owner&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Owner.Name&quot;}},&quot;EntitySchemaName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;Activity&quot;}}},&quot;ViewConfigClassName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;Terrasoft.BaseDashboardItemViewConfig&quot;}}},&quot;EntityInitialized&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:12,&quot;value&quot;:true}}},&quot;IsRequired&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:12,&quot;value&quot;:false}}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false},{&quot;__type&quot;:&quot;Terrasoft.Nui.ServiceModel.DataContract.SelectQuery&quot;,&quot;rootSchemaName&quot;:&quot;VwProcessDashboard&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;MasterColumnFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;EntityId&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}},&quot;749165bb-1937-4227-b5bb-18bdc512119a&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;EntitySchemaUId&quot;},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;16be3651-8fe2-4159-8dd0-a803d4683dd3&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;Id&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Id&quot;}},&quot;EntityId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessElementEntityId&quot;}},&quot;EntitySchemaUId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessElementEntitySchemaUId&quot;}},&quot;ProcessElement&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessElement&quot;}},&quot;ProcessElementId&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessElement.Id&quot;}},&quot;ProcessData&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessData&quot;}},&quot;Description&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ProcessName&quot;}},&quot;ElementCaption&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;ElementCaption&quot;}},&quot;Date&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;CreatedOn&quot;}},&quot;Owner&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;Owner.Name&quot;}},&quot;EntitySchemaName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;VwProcessDashboard&quot;}}},&quot;ViewConfigClassName&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:1,&quot;value&quot;:&quot;Terrasoft.BaseDashboardItemViewConfig&quot;}}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/BatchQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1076 /0/DataService/json/SyncReply/SelectQuery +" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rootSchemaName&quot;:&quot;Contact&quot;,&quot;operationType&quot;:0,&quot;filters&quot;:{&quot;items&quot;:{&quot;primaryColumnFilter&quot;:{&quot;filterType&quot;:1,&quot;comparisonType&quot;:3,&quot;isEnabled&quot;:true,&quot;trimDateTimeParameterToDate&quot;:false,&quot;leftExpression&quot;:{&quot;expressionType&quot;:1,&quot;functionType&quot;:1,&quot;macrosType&quot;:34},&quot;rightExpression&quot;:{&quot;expressionType&quot;:2,&quot;parameter&quot;:{&quot;dataValueType&quot;:0,&quot;value&quot;:&quot;${IdOwnerContact}&quot;}}}},&quot;logicalOperation&quot;:0,&quot;isEnabled&quot;:true,&quot;filterType&quot;:6},&quot;columns&quot;:{&quot;items&quot;:{&quot;DoNotUseEmail&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DoNotUseEmail&quot;}},&quot;DoNotUseCall&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DoNotUseCall&quot;}},&quot;DoNotUseSms&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DoNotUseSms&quot;}},&quot;DoNotUseFax&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DoNotUseFax&quot;}},&quot;DoNotUseMail&quot;:{&quot;caption&quot;:&quot;&quot;,&quot;orderDirection&quot;:0,&quot;orderPosition&quot;:-1,&quot;isVisible&quot;:true,&quot;expression&quot;:{&quot;expressionType&quot;:0,&quot;columnPath&quot;:&quot;DoNotUseMail&quot;}}}},&quot;isDistinct&quot;:false,&quot;rowCount&quot;:-1,&quot;rowsOffset&quot;:-1,&quot;isPageable&quot;:false,&quot;allColumns&quot;:false,&quot;serverESQCacheParameters&quot;:{&quot;cacheLevel&quot;:0,&quot;cacheGroup&quot;:&quot;&quot;,&quot;cacheItemName&quot;:&quot;&quot;},&quot;isHierarchical&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/0/DataService/json/SyncReply/SelectQuery</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1081 /0/rest/TsiLocationHistoryService/GetLocationHistoryData" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;contactId&quot;:&quot;${IdOwnerContact}&quot;,&quot;startDate&quot;:&quot;2018-04-10T00:00:00.000&quot;,&quot;endDate&quot;:&quot;2018-04-11T00:00:00.000&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${domain}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/0/rest/TsiLocationHistoryService/GetLocationHistoryData</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}/0/Nui/ViewModule.aspx</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${porotocol}://${domain}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-Request-Source" elementType="Header">
                  <stringProp name="Header.name">X-Request-Source</stringProp>
                  <stringProp name="Header.value">ajax-provider</stringProp>
                </elementProp>
                <elementProp name="BPMCSRF" elementType="Header">
                  <stringProp name="Header.name">BPMCSRF</stringProp>
                  <stringProp name="Header.value">${__V(CSRF_TOKEN)}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">443</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <stringProp name="ProxyControlGui.domains">ffm-test.ukrtelecom.net</stringProp>
      </ProxyControl>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
